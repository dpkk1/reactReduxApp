{"version":3,"sources":["App.js","actions/index.js","reportWebVitals.js","reducers/upDown.js","reducers/index.js","store.js","index.js"],"names":["App","myState","useSelector","state","changeTheNumber","dispatch","useDispatch","className","title","onClick","type","name","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAyCeA,EApCH,WACV,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,mBACvCC,EAAWC,cACjB,OACE,mCACE,sBAAKC,UAAU,YAAf,UACE,6DACA,uDAEA,sBAAKA,UAAU,WAAf,UACE,mBACEA,UAAU,kBACVC,MAAM,YACNC,QAAS,kBAAMJ,ECXlB,CACLK,KAAM,eDOA,SAKE,uCAEF,uBACEC,KAAK,WACLD,KAAK,OACLH,UAAU,kBACVK,MAAOX,IAET,mBACEM,UAAU,iBACVC,MAAM,YACNC,QAAS,kBAAMJ,EC9BlB,CACLK,KAAM,eD0BA,SAKE,gDErBGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCMCV,EAXS,WAAmC,IAAlCD,EAAiC,uDAFrC,EAE0BmB,EAAW,uCACxD,OAAQA,EAAOZ,MACb,IAAK,YACH,OAAOP,EAAQ,EACjB,IAAK,YACH,OAAOA,EAAQ,EACjB,QACE,OAAOA,ICAEoB,EAJKC,YAAgB,CAClCpB,oBCEaqB,EALDC,YACZH,EACAI,OAAOC,8BAAgCD,OAAOC,gCCGhDH,EAAMI,WAAU,WACdC,QAAQC,IAAIN,EAAMO,eAGpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJW,SAASC,eAAe,SAM1BxB,M","file":"static/js/main.3a7370ec.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { incNumber, decNumber } from './actions/index';\n\nconst App = () => {\n  const myState = useSelector((state) => state.changeTheNumber);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <div className=\"container\">\n        <h1>Increment/Decrement counter</h1>\n        <h2>using React and Redux</h2>\n\n        <div className=\"quantity\">\n          <a\n            className=\"quantity__minus\"\n            title=\"Decrement\"\n            onClick={() => dispatch(decNumber())}\n          >\n            <span>-</span>\n          </a>\n          <input\n            name=\"quantity\"\n            type=\"text\"\n            className=\"quantity__input\"\n            value={myState}\n          />\n          <a\n            className=\"quantity__plus\"\n            title=\"Increment\"\n            onClick={() => dispatch(incNumber())}\n          >\n            <span>+</span>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","export const incNumber = () => {\r\n  return {\r\n    type: 'INCREMENT',\r\n  };\r\n};\r\n\r\nexport const decNumber = () => {\r\n  return {\r\n    type: 'DECREMENT',\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = 0;\r\n\r\nconst changeTheNumber = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return state + 1;\r\n    case 'DECREMENT':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default changeTheNumber;\r\n","import changeTheNumber from './upDown';\r\n\r\nimport { combineReducers } from 'redux'; //import from redux\r\n\r\n//object\r\nconst rootReducer = combineReducers({\r\n  changeTheNumber,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}